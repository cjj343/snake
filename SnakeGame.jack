class SnakeGame
{
	field SnakeChunk head;
	field Fruit fruit;
	field int direction;

	//initialize snake location and set direction to zero
	constructor SnakeGame new()
	{	
		let head = SnakeChunk.new(254, 126);
		let fruit = Fruit.new();
		let direction = 0;
		return this;	
	}


	//jack specific method for cleaning up memory
	method void dispose()
	{
		do head.dispose();
		do Memory.deAlloc(this);
		return;
	}


	//run game method
	method void Run()
	{

		var char key;
		var boolean exit;
		let exit = false;
		
		while(~exit)
		{
			
			while ((key = 0) & (~exit)) 
			{
				//wait for new keyboard input			
            	let key = Keyboard.keyPressed();

            	
            	//check to see if snake head has contacted fruit
				if(fruit.resetFruitPos(head.getX(), head.getY()))
				{
					do head.addTail();
				}

            	//check to see if head has contacted wall or tail
            	let exit = head.moveChunk(direction);


				do Sys.wait(20);	
         	}

			if (key = 81)  
			{ 
				let exit = true;
			}
			if (key = 131) 
			{ 
				let direction = 1; 
			}
         		if (key = 133)
			{ 
				let direction = 2; 
			}
         		if (key = 130) 
			{ 
				let direction = 3; 
			}
         		if (key = 132) 
			{ 
				let direction = 4; 
			}
		

			let key = 0;

		}

		return;
		
	}
}
